// Code generated by protoc-gen-go. DO NOT EDIT.
// source: professionService/professionService.proto

/*
Package professionService is a generated protocol buffer package.

It is generated from these files:
	professionService/professionService.proto

It has these top-level messages:
	ProfessionService
	ProfessionServiceRequest
	ProfessionServiceList
*/
package professionService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProfessionService struct {
	Id           int32                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	StylistId    int32                      `protobuf:"varint,2,opt,name=stylist_id,json=stylistId" json:"stylist_id,omitempty"`
	ProfessionId int32                      `protobuf:"varint,3,opt,name=profession_id,json=professionId" json:"profession_id,omitempty"`
	ServiceId    int32                      `protobuf:"varint,4,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	IsDeleted    bool                       `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted" json:"is_deleted,omitempty"`
	UpdatedAt    *google_protobuf.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt" json:"UpdatedAt,omitempty"`
	CreatedAt    *google_protobuf.Timestamp `protobuf:"bytes,7,opt,name=CreatedAt" json:"CreatedAt,omitempty"`
}

func (m *ProfessionService) Reset()                    { *m = ProfessionService{} }
func (m *ProfessionService) String() string            { return proto.CompactTextString(m) }
func (*ProfessionService) ProtoMessage()               {}
func (*ProfessionService) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProfessionService) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ProfessionService) GetStylistId() int32 {
	if m != nil {
		return m.StylistId
	}
	return 0
}

func (m *ProfessionService) GetProfessionId() int32 {
	if m != nil {
		return m.ProfessionId
	}
	return 0
}

func (m *ProfessionService) GetServiceId() int32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ProfessionService) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *ProfessionService) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ProfessionService) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ProfessionServiceRequest struct {
	StylistId int32 `protobuf:"varint,1,opt,name=stylist_id,json=stylistId" json:"stylist_id,omitempty"`
}

func (m *ProfessionServiceRequest) Reset()                    { *m = ProfessionServiceRequest{} }
func (m *ProfessionServiceRequest) String() string            { return proto.CompactTextString(m) }
func (*ProfessionServiceRequest) ProtoMessage()               {}
func (*ProfessionServiceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProfessionServiceRequest) GetStylistId() int32 {
	if m != nil {
		return m.StylistId
	}
	return 0
}

type ProfessionServiceList struct {
	List []*ProfessionService `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
}

func (m *ProfessionServiceList) Reset()                    { *m = ProfessionServiceList{} }
func (m *ProfessionServiceList) String() string            { return proto.CompactTextString(m) }
func (*ProfessionServiceList) ProtoMessage()               {}
func (*ProfessionServiceList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProfessionServiceList) GetList() []*ProfessionService {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*ProfessionService)(nil), "professionService.professionService")
	proto.RegisterType((*ProfessionServiceRequest)(nil), "professionService.professionServiceRequest")
	proto.RegisterType((*ProfessionServiceList)(nil), "professionService.professionServiceList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for HarryStylistProfessionService service

type HarryStylistProfessionServiceClient interface {
	GetprofessionService(ctx context.Context, in *ProfessionServiceRequest, opts ...grpc.CallOption) (*ProfessionServiceList, error)
	CreateprofessionService(ctx context.Context, in *ProfessionServiceList, opts ...grpc.CallOption) (*ProfessionServiceList, error)
	UpdateprofessionService(ctx context.Context, in *ProfessionServiceList, opts ...grpc.CallOption) (*ProfessionServiceList, error)
}

type harryStylistProfessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewHarryStylistProfessionServiceClient(cc *grpc.ClientConn) HarryStylistProfessionServiceClient {
	return &harryStylistProfessionServiceClient{cc}
}

func (c *harryStylistProfessionServiceClient) GetprofessionService(ctx context.Context, in *ProfessionServiceRequest, opts ...grpc.CallOption) (*ProfessionServiceList, error) {
	out := new(ProfessionServiceList)
	err := grpc.Invoke(ctx, "/professionService.HarryStylistProfessionService/GetprofessionService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *harryStylistProfessionServiceClient) CreateprofessionService(ctx context.Context, in *ProfessionServiceList, opts ...grpc.CallOption) (*ProfessionServiceList, error) {
	out := new(ProfessionServiceList)
	err := grpc.Invoke(ctx, "/professionService.HarryStylistProfessionService/CreateprofessionService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *harryStylistProfessionServiceClient) UpdateprofessionService(ctx context.Context, in *ProfessionServiceList, opts ...grpc.CallOption) (*ProfessionServiceList, error) {
	out := new(ProfessionServiceList)
	err := grpc.Invoke(ctx, "/professionService.HarryStylistProfessionService/UpdateprofessionService", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for HarryStylistProfessionService service

type HarryStylistProfessionServiceServer interface {
	GetprofessionService(context.Context, *ProfessionServiceRequest) (*ProfessionServiceList, error)
	CreateprofessionService(context.Context, *ProfessionServiceList) (*ProfessionServiceList, error)
	UpdateprofessionService(context.Context, *ProfessionServiceList) (*ProfessionServiceList, error)
}

func RegisterHarryStylistProfessionServiceServer(s *grpc.Server, srv HarryStylistProfessionServiceServer) {
	s.RegisterService(&_HarryStylistProfessionService_serviceDesc, srv)
}

func _HarryStylistProfessionService_GetprofessionService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfessionServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HarryStylistProfessionServiceServer).GetprofessionService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/professionService.HarryStylistProfessionService/GetprofessionService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HarryStylistProfessionServiceServer).GetprofessionService(ctx, req.(*ProfessionServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HarryStylistProfessionService_CreateprofessionService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfessionServiceList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HarryStylistProfessionServiceServer).CreateprofessionService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/professionService.HarryStylistProfessionService/CreateprofessionService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HarryStylistProfessionServiceServer).CreateprofessionService(ctx, req.(*ProfessionServiceList))
	}
	return interceptor(ctx, in, info, handler)
}

func _HarryStylistProfessionService_UpdateprofessionService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProfessionServiceList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HarryStylistProfessionServiceServer).UpdateprofessionService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/professionService.HarryStylistProfessionService/UpdateprofessionService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HarryStylistProfessionServiceServer).UpdateprofessionService(ctx, req.(*ProfessionServiceList))
	}
	return interceptor(ctx, in, info, handler)
}

var _HarryStylistProfessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "professionService.HarryStylistProfessionService",
	HandlerType: (*HarryStylistProfessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetprofessionService",
			Handler:    _HarryStylistProfessionService_GetprofessionService_Handler,
		},
		{
			MethodName: "CreateprofessionService",
			Handler:    _HarryStylistProfessionService_CreateprofessionService_Handler,
		},
		{
			MethodName: "UpdateprofessionService",
			Handler:    _HarryStylistProfessionService_UpdateprofessionService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "professionService/professionService.proto",
}

func init() { proto.RegisterFile("professionService/professionService.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 367 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x53, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0xe9, 0x87, 0x76, 0xab, 0x82, 0x41, 0x31, 0x14, 0x8a, 0xa1, 0x7a, 0x88, 0x08, 0x09,
	0xd4, 0x8b, 0x1e, 0xb5, 0x8a, 0x16, 0x3c, 0x68, 0xaa, 0x17, 0x2f, 0x25, 0xed, 0xbe, 0xb6, 0x0b,
	0x59, 0x37, 0x66, 0x5f, 0x85, 0xfe, 0x14, 0xff, 0xa3, 0x3f, 0x42, 0x76, 0xb7, 0xb5, 0xd0, 0x15,
	0xac, 0x17, 0x4f, 0x81, 0x79, 0x33, 0x6f, 0x32, 0x6f, 0x12, 0x72, 0x92, 0x17, 0x62, 0x04, 0x52,
	0x32, 0xf1, 0xda, 0x83, 0xe2, 0x9d, 0x0d, 0x21, 0xb6, 0x90, 0x28, 0x2f, 0x04, 0x0a, 0x6f, 0xd7,
	0x1a, 0x34, 0x0e, 0xc7, 0x42, 0x8c, 0x33, 0x2d, 0x41, 0x31, 0x98, 0x8e, 0x62, 0x64, 0x1c, 0x24,
	0xa6, 0x3c, 0x37, 0x9a, 0xd6, 0x87, 0x4b, 0x6c, 0x99, 0xb7, 0x43, 0x5c, 0x46, 0x7d, 0x27, 0x70,
	0xc2, 0x4a, 0xe2, 0x32, 0xea, 0x35, 0x09, 0x91, 0x38, 0xcb, 0x98, 0xc4, 0x3e, 0xa3, 0xbe, 0xab,
	0xf1, 0xda, 0x1c, 0xe9, 0x52, 0xef, 0x88, 0x6c, 0x2f, 0x77, 0x28, 0x46, 0x49, 0x33, 0xb6, 0x96,
	0x60, 0xd7, 0xec, 0x30, 0xeb, 0x15, 0xa3, 0x3c, 0xdf, 0x61, 0x10, 0x33, 0x66, 0xb2, 0x4f, 0x21,
	0x03, 0x04, 0xea, 0x57, 0x02, 0x27, 0xdc, 0x4c, 0x6a, 0x4c, 0x5e, 0x1b, 0xc0, 0x3b, 0x27, 0xb5,
	0xe7, 0x9c, 0xa6, 0x08, 0xf4, 0x12, 0xfd, 0x6a, 0xe0, 0x84, 0xf5, 0x76, 0x23, 0x32, 0xe1, 0xa2,
	0x45, 0xb8, 0xe8, 0x69, 0x11, 0x2e, 0x59, 0x92, 0x95, 0xb2, 0x53, 0xc0, 0x5c, 0xb9, 0xf1, 0xbb,
	0xf2, 0x9b, 0xdc, 0xba, 0x20, 0xbe, 0x75, 0x9a, 0x04, 0xde, 0xa6, 0x20, 0x71, 0xe5, 0x22, 0xce,
	0xca, 0x45, 0x5a, 0x8f, 0x64, 0xdf, 0x92, 0xde, 0x33, 0xa9, 0xde, 0xa6, 0xac, 0x28, 0xbe, 0x13,
	0x94, 0xc2, 0x7a, 0xfb, 0x38, 0xfa, 0xb1, 0xcb, 0x15, 0x4b, 0xad, 0x68, 0x7f, 0xba, 0xa4, 0x79,
	0x97, 0x16, 0xc5, 0xac, 0x67, 0x5c, 0x1e, 0xac, 0xd6, 0x38, 0xd9, 0xbb, 0x05, 0xb4, 0xdb, 0x3c,
	0x5d, 0xcb, 0xc5, 0x04, 0x6b, 0x84, 0xeb, 0x90, 0x75, 0x14, 0x4e, 0x0e, 0xcc, 0xad, 0x6c, 0xc7,
	0xb5, 0x97, 0xfc, 0xcd, 0xce, 0x94, 0xfa, 0x2f, 0x76, 0x57, 0x37, 0x2f, 0x9d, 0x31, 0xc3, 0xc9,
	0x74, 0x10, 0x0d, 0x05, 0x8f, 0x53, 0x14, 0x5c, 0xce, 0x24, 0x02, 0x97, 0x08, 0x29, 0x8f, 0x27,
	0xaa, 0x08, 0xfd, 0xf5, 0x70, 0x41, 0x21, 0x93, 0xb1, 0x7e, 0xd8, 0x7f, 0xe6, 0xa0, 0xaa, 0x49,
	0x67, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x86, 0xa5, 0x72, 0x70, 0xc7, 0x03, 0x00, 0x00,
}
